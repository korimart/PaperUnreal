TriangulateSimplePolygon
FPlanarPolygonMeshGenerator
일정 이상 곡선이 발생해야 버텍스 추가로 최적화
지나간 흔적은 mesh bool subtract가 아니라 머티리얼로 구현
자기 흔적에 닿으면 죽으니까 새 영토는 기존 영토에 다시 충돌할 때만 발생함 새 영토는 기존 영토의 두 만나는 점 사이의 점들을 전부 지우고 새 path로 교체한 것과 같음

1. 본인 트랙 렌더링
2. 영토 렌더링
3. 영토 생성

UDynamicMeshComponent의 함수들을 사용하여 영역 버텍스 버퍼 업데이트 시 좀 더 효율적으로 할 수 있음
Mesh 생성 관련 함수들 MeshPrimitiveFunctions.h에 들어있음
MeshSelectionFunctions.h의 함수들로 메시의 일부를 선택하여 MeshTransformFunctions.h로 옮길 수 있음
커스텀 MeshGenerator 만들어서 마지막 face를 polygroup 0번으로 하도록 하자






1. PolygonBoundary의 segment list를 다른 클래스로 분리해서 tracer에서도 사용
2. 충돌체크 클래스 만들어서 매 프레임 충돌체크 -> tracer 껐다켰다 / 사망체크 / 영토추가
3. 트레이스 남의 영토 지나가면 영토 갈라져 보이는 기능
4. 미니맵



1. 영역과 트레이스 충돌 체크는 중심 기준
2. 트레이스 시작 및 종료 시 붕 떠 있는 버텍스는 영역에 내린 수선의 발로 연결해준다





1. 각종 버그 수정
2. PolygonBoundary 클래스가 필요 없음 LoopedSegment로 대체





1. 내 영토랑 다른 영토를 구분할 수 있어야 함
2. 다른 영토 깎아내는 거 구현
3. 게임 모드 구현
4. 멀티플레이 구현
5. 최소한의 UI 구현
6. 미니맵 구현
7. 조작 구현